#!/bin/bash
#
# data feeds

# Initialize Environment Variables
pong_amount="3771"
ip="192.168.12.109"
port="10107"
user="user"
pass="pass"
in_message="You are purchasing something cool"
out_message="You purchased this rad thing"

# Initialize parameters
if [ ! -d assets/ ]; then
  mkdir assets/
fi
pong_dir="assets/"
pong_db="$pong_dir/$pong_amount.sales.db"
iaddress_text_file="$pong_dir/$pong_amount.iaddress.txt"
touch "$pong_db"

# Initialize ping module
export_iaddress=$(curl -s -X POST \
  "http://$ip:$port/json_rpc" \
  -u "$user:$pass" \
  -H 'content-type: application/json' \
  -d '{
    "jsonrpc": "2.0",
    "id": "1",
    "method": "MakeIntegratedAddress",
    "params": {
      "payload_rpc": [
        {
          "name": "C",
          "datatype": "S",
          "value": "'"${in_message}"'"
        },
        {
          "name": "D",
          "datatype": "U",
          "value": 1311768465173141000
        },
        {
          "name": "N",
          "datatype": "U",
          "value": 0
        },
        {
          "name": "V",
          "datatype": "U",
          "value": 3771
        }
      ]
    }
}')

echo "Welcome to your pong server."
echo "$export_iaddress" | jq -r '.result.integrated_address' > "$iaddress_text_file"
echo "Your iAddress is below:"
cat "$iaddress_text_file"
echo "A copy of your iAddress has been saved in $iaddress_text_file"

# Initialize pong module
while true; do
# Initialize Sales List
export_transfers=$(curl -s -X POST \
  "http://$ip:$port/json_rpc" \
  -u "$user:$pass" \
  -H 'content-type: application/json' \
  -d '{
    "jsonrpc": "2.0",
    "id": "1",
    "method": "GetTransfers",
    "params": {
      "coinbase": true,
      "out": true,
      "in": true
    }
}')

# Extract sales list with jq and store it in a variable
sales_list=$(echo "$export_transfers" | jq -r '.result.entries[] | select(.payload_rpc != null) | (.time) + " " + (.payload_rpc[] | select(.name == "R" and .datatype == "A") | .value) + " " + (.amount | tostring) + " " + (.txid | tostring) + " " + (.dstport | tostring)')

  echo "Scanning your wallet..."
  while read -r sale; do
    time=$(echo "$sale" | awk '{print $1}')
    addr=$(echo "$sale" | awk '{print $2}')
    amount=$(echo "$sale" | awk '{print $3}')
    txid=$(echo "$sale" | awk '{print $4}')
    dst_port=$(echo "$sale" | awk '{print $5}')
    already_processed=$(grep "$time" "$pong_db")
    if [[ "$already_processed" =~ "$time" ]]; then
      echo "$txid is already processed, skipping"
      continue
    fi
    if [[ "$pong_amount" =~ "$amount" ]]; then
      echo "$addr sent $amount at $time"
      echo "Dispatching transfer"
      pong_response=$(curl -s -X POST \
        "http://$ip:$port/json_rpc" \
        -u "$user:$pass" \
        -H 'content-type: application/json' \
        -d '{
          "jsonrpc": "2.0",
          "id": "1",
          "method": "transfer",
          "params": {
            "scid": "0000000000000000000000000000000000000000000000000000000000000000",
            "destination": "'"${addr}"'",
            "amount": 1,
            "payload_rpc": [
              {
                "name": "C",
                "datatype": "S",
                "value": "'"${out_message}"'"
              },
              {
                "name": "D",
                "datatype": "U",
                "value": 0
              },
              {
                "name": "S",
                "datatype": "U",
                "value": "'"${dst_port}"'"
              }
            ]
          }
        }' | jq -r '.result.txid')
      echo "TXID: $pong_response"
      printf "%s\n" "$sale" >> "$pong_db"
      echo "Pong Server has successfully dispatched pong."
    fi
  done <<< "$sales_list"
  echo "Wallet scan complete and will scan again every 18 seconds."
  sleep 18
done
